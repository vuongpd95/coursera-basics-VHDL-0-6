// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
	Mux(a = a[0], b = c[0], sel = sel[1], out = muxa0c0);
	Mux(a = b[0], b = d[0], sel = sel[1], out = muxb0d0);
	Mux(a = muxa0c0, b = muxb0d0, sel = sel[0], out = out[0]);

	Mux(a = a[1], b = c[1], sel = sel[1], out = muxa1c1);
	Mux(a = b[1], b = d[1], sel = sel[1], out = muxb1d1);
	Mux(a = muxa1c1, b = muxb1d1, sel = sel[0], out = out[1]);

	Mux(a = a[2], b = c[2], sel = sel[1], out = muxa2c2);
	Mux(a = b[2], b = d[2], sel = sel[1], out = muxb2d2);
	Mux(a = muxa2c2, b = muxb2d2, sel = sel[0], out = out[2]);

	Mux(a = a[3], b = c[3], sel = sel[1], out = muxa3c3);
	Mux(a = b[3], b = d[3], sel = sel[1], out = muxb3d3);
	Mux(a = muxa3c3, b = muxb3d3, sel = sel[0], out = out[3]);

	Mux(a = a[4], b = c[4], sel = sel[1], out = muxa4c4);
	Mux(a = b[4], b = d[4], sel = sel[1], out = muxb4d4);
	Mux(a = muxa4c4, b = muxb4d4, sel = sel[0], out = out[4]);

	Mux(a = a[5], b = c[5], sel = sel[1], out = muxa5c5);
	Mux(a = b[5], b = d[5], sel = sel[1], out = muxb5d5);
	Mux(a = muxa5c5, b = muxb5d5, sel = sel[0], out = out[5]);

	Mux(a = a[6], b = c[6], sel = sel[1], out = muxa6c6);
	Mux(a = b[6], b = d[6], sel = sel[1], out = muxb6d6);
	Mux(a = muxa6c6, b = muxb6d6, sel = sel[0], out = out[6]);

	Mux(a = a[7], b = c[7], sel = sel[1], out = muxa7c7);
	Mux(a = b[7], b = d[7], sel = sel[1], out = muxb7d7);
	Mux(a = muxa7c7, b = muxb7d7, sel = sel[0], out = out[7]);

	Mux(a = a[8], b = c[8], sel = sel[1], out = muxa8c8);
	Mux(a = b[8], b = d[8], sel = sel[1], out = muxb8d8);
	Mux(a = muxa8c8, b = muxb8d8, sel = sel[0], out = out[8]);

	Mux(a = a[9], b = c[9], sel = sel[1], out = muxa9c9);
	Mux(a = b[9], b = d[9], sel = sel[1], out = muxb9d9);
	Mux(a = muxa9c9, b = muxb9d9, sel = sel[0], out = out[9]);

	Mux(a = a[10], b = c[10], sel = sel[1], out = muxa10c10);
	Mux(a = b[10], b = d[10], sel = sel[1], out = muxb10d10);
	Mux(a = muxa10c10, b = muxb10d10, sel = sel[0], out = out[10]);

	Mux(a = a[11], b = c[11], sel = sel[1], out = muxa11c11);
	Mux(a = b[11], b = d[11], sel = sel[1], out = muxb11d11);
	Mux(a = muxa11c11, b = muxb11d11, sel = sel[0], out = out[11]);

	Mux(a = a[12], b = c[12], sel = sel[1], out = muxa12c12);
	Mux(a = b[12], b = d[12], sel = sel[1], out = muxb12d12);
	Mux(a = muxa12c12, b = muxb12d12, sel = sel[0], out = out[12]);

	Mux(a = a[13], b = c[13], sel = sel[1], out = muxa13c13);
	Mux(a = b[13], b = d[13], sel = sel[1], out = muxb13d13);
	Mux(a = muxa13c13, b = muxb13d13, sel = sel[0], out = out[13]);

	Mux(a = a[14], b = c[14], sel = sel[1], out = muxa14c14);
	Mux(a = b[14], b = d[14], sel = sel[1], out = muxb14d14);
	Mux(a = muxa14c14, b = muxb14d14, sel = sel[0], out = out[14]);

	Mux(a = a[15], b = c[15], sel = sel[1], out = muxa15c15);
	Mux(a = b[15], b = d[15], sel = sel[1], out = muxb15d15);
	Mux(a = muxa15c15, b = muxb15d15, sel = sel[0], out = out[15]);
}