// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in = load, sel[0] = address[12],
    					sel[1] = address[13], a = lRAM4K0,
    											b = lRAM4K1,
    											c = lRAM4K2,
    											d = lRAM4K3);
    RAM4K(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8],
    				address[9] = address[9],
    				address[10] = address[10],
    				address[11] = address[11], out = out0, load = lRAM4K0);
    RAM4K(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8],
    				address[9] = address[9],
    				address[10] = address[10],
    				address[11] = address[11], out = out1, load = lRAM4K1);
    RAM4K(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8],
    				address[9] = address[9],
    				address[10] = address[10],
    				address[11] = address[11], out = out2, load = lRAM4K2);
    RAM4K(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8],
    				address[9] = address[9],
    				address[10] = address[10],
    				address[11] = address[11], out = out3, load = lRAM4K3);
    Mux4Way16(a = out0,
    			b = out1,
    			c = out2,
    			d = out3, sel[0] = address[12],
    						sel[1] = address[13], out = out);
}