// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel[0] = address[9],
    					sel[1] = address[10],
    					sel[2] = address[11], a = lRAM5120,
    											b = lRAM5121,
    											c = lRAM5122,
    											d = lRAM5123,
    											e = lRAM5124,
    											f = lRAM5125,
    											g = lRAM5126,
    											h = lRAM5127);
    RAM512(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8], out = out0, load = lRAM5120);
    RAM512(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8], out = out1, load = lRAM5121);
    RAM512(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8], out = out2, load = lRAM5122);
    RAM512(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8], out = out3, load = lRAM5123);
    RAM512(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8], out = out4, load = lRAM5124);
    RAM512(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8], out = out5, load = lRAM5125);
    RAM512(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8], out = out6, load = lRAM5126);
    RAM512(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5],
    				address[6] = address[6],
    				address[7] = address[7],
    				address[8] = address[8], out = out7, load = lRAM5127);
    Mux8Way16(a = out0,
    			b = out1,
    			c = out2,
    			d = out3,
    			e = out4,
    			f = out5,
    			g = out6,
    			h = out7, sel[0] = address[9],
    						sel[1] = address[10],
    						sel[2] = address[11], out = out);

}