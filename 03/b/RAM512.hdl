// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel[0] = address[6],
    					sel[1] = address[7],
    					sel[2] = address[8], a = lRAM640,
    											b = lRAM641,
    											c = lRAM642,
    											d = lRAM643,
    											e = lRAM644,
    											f = lRAM645,
    											g = lRAM646,
    											h = lRAM647);
    RAM64(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5], out = out0, load = lRAM640);
    RAM64(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5], out = out1, load = lRAM641);
    RAM64(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5], out = out2, load = lRAM642);
    RAM64(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5], out = out3, load = lRAM643);
    RAM64(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5], out = out4, load = lRAM644);
    RAM64(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5], out = out5, load = lRAM645);
    RAM64(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5], out = out6, load = lRAM646);
    RAM64(in = in, address[0] = address[0],
    				address[1] = address[1],
    				address[2] = address[2],
    				address[3] = address[3],
    				address[4] = address[4],
    				address[5] = address[5], out = out7, load = lRAM647);
    Mux8Way16(a = out0,
    			b = out1,
    			c = out2,
    			d = out3,
    			e = out4,
    			f = out5,
    			g = out6,
    			h = out7, sel[0] = address[6],
    						sel[1] = address[7],
    						sel[2] = address[8], out = out);
}